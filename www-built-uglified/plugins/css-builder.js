define(["require","./normalize"],function(e,t){function i(e){if(typeof process!="undefined"&&process.versions&&!!process.versions.node&&require.nodeRequire)try{var t=require.nodeRequire("csso"),n=e.length;return e=t.justDoIt(e),console.log("Compressed CSS output to "+Math.round(e.length/n*100)+"%."),e}catch(r){return console.log('Compression module not installed. Use "npm install csso -g" to enable.'),e}return console.log("Compression not supported outside of nodejs environments."),e}function s(e){if(typeof process!="undefined"&&process.versions&&!!process.versions.node&&require.nodeRequire){var t=require.nodeRequire("fs"),n=t.readFileSync(e,"utf8");return n.indexOf("ï»¿")===0?n.substring(1):n}var n=new java.io.File(e),r=java.lang.System.getProperty("line.separator"),i=new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(n),"utf-8")),s,o;try{s=new java.lang.StringBuffer,o=i.readLine(),o&&o.length()&&o.charAt(0)===65279&&(o=o.substring(1)),s.append(o);while((o=i.readLine())!==null)s.append(r).append(o);return String(s.toString())}finally{i.close()}}function o(e,t){if(typeof process!="undefined"&&process.versions&&!!process.versions.node&&require.nodeRequire){var n=require.nodeRequire("fs");n.writeFileSync(e,t,"utf8")}else{var r=new java.lang.String(t),i=new java.io.BufferedWriter(new java.io.OutputStreamWriter(new java.io.FileOutputStream(e),"utf-8"));try{i.write(r,0,r.length()),i.flush()}finally{i.close()}}}function u(e){return e.replace(/(["'\\])/g,"\\$1").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r")}var n=require.toUrl("."),r={},a=function(r,i){var o=r;o.substr(o.length-4,4)!=".css"&&!i&&(o+=".css"),o=e.toUrl(o);if(o.substr(0,7)=="http://"||o.substr(0,8)=="https://")return;var u=s(o);return i&&(u=i(u)),u=t(u,o,n),u},f;r.load=function(e,t,n,i){if(i.modules)for(var s=0;s<i.modules.length;s++)if(i.modules[s].layer===undefined){f=s;break}r.config=r.config||i,n()},r.normalize=function(e,t){return e.substr(e.length-1,1)=="!"&&(e=e.substr(0,e.length-1)),e.substr(e.length-4,4)==".css"&&(e=e.substr(0,e.length-4)),t(e)};var l=[];return r.write=function(e,t,n,r,i){if(t.substr(0,7)=="http://"||t.substr(0,8)=="https://")return;l.push(a(t+(r?"."+r:""),i)),n.asModule(e+"!"+t,"define(function(){})")},r.onLayerEnd=function(s,a){var c=!1;r.config.separateCSS&&(c=!0),typeof f=="number"&&r.config.modules[f].separateCSS!==undefined&&(c=r.config.modules[f].separateCSS),f=null;var h=l.join("");if(c){typeof console!="undefined"&&console.log&&console.log("Writing CSS! file: "+a.name+"\n");var p=this.config.dir?this.config.dir+a.name+".css":r.config.out.replace(/\.js$/,".css"),d=i(t(h,n,p));o(p,d)}else{if(h=="")return;h=u(i(h));var v=e.toUrl("css").substr(n.length-1).split("/");v[v.length-1]="normalize";var m=v.join("/");s("for (var c in requirejs.s.contexts) { requirejs.s.contexts[c].nextTick = function(f){f()} } \nrequire(['css', '"+m+"', 'require'], function(css, normalize, require) { \n"+"var pathname = window.location.pathname.split('/'); \n"+"pathname.pop(); \n"+"pathname = pathname.join('/') + '/'; \n"+"var baseUrl = require.toUrl('.'); \n"+"baseUrl = normalize.convertURIBase(baseUrl, pathname, '/'); \n"+"css.inject(normalize('"+h+"', baseUrl, pathname)); \n"+"}); \n"+"for (var c in requirejs.s.contexts) { requirejs.s.contexts[c].nextTick = requirejs.nextTick; } \n")}l=[]},r});